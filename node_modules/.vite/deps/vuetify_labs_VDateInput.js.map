{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VDateInput/VDateInput.tsx"],
  "sourcesContent": ["// Components\nimport { makeVConfirmEditProps, VConfirmEdit } from '@/components/VConfirmEdit/VConfirmEdit'\nimport { makeVDatePickerProps, VDatePicker } from '@/components/VDatePicker/VDatePicker'\nimport { VMenu } from '@/components/VMenu/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\n\n// Composables\nimport { useDate } from '@/composables/date'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref, shallowRef } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { StrategyProps } from '@/components/VOverlay/locationStrategies'\nimport type { VTextFieldSlots } from '@/components/VTextField/VTextField'\n\n// Types\nexport type VDateInputActionsSlot = {\n  save: () => void\n  cancel: () => void\n  isPristine: boolean\n}\n\nexport type VDateInputSlots = Omit<VTextFieldSlots, 'default'> & {\n  actions: VDateInputActionsSlot\n  default: never\n}\n\nexport const makeVDateInputProps = propsFactory({\n  hideActions: Boolean,\n  location: {\n    type: String as PropType<StrategyProps['location']>,\n    default: 'bottom start',\n  },\n  ...makeFocusProps(),\n  ...makeVConfirmEditProps(),\n  ...makeVTextFieldProps({\n    placeholder: 'mm/dd/yyyy',\n    prependIcon: '$calendar',\n  }),\n  ...omit(makeVDatePickerProps({\n    hideHeader: true,\n    showAdjacentMonths: true,\n  }), ['active', 'location', 'rounded']),\n}, 'VDateInput')\n\nexport const VDateInput = genericComponent<VDateInputSlots>()({\n  name: 'VDateInput',\n\n  props: makeVDateInputProps(),\n\n  emits: {\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const adapter = useDate()\n    const { isFocused, focus, blur } = useFocus(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      props.multiple ? [] : null,\n      val => Array.isArray(val) ? val.map(item => adapter.toJsDate(item)) : val ? adapter.toJsDate(val) : val,\n      val => Array.isArray(val) ? val.map(item => adapter.date(item)) : val ? adapter.date(val) : val\n    )\n\n    const menu = shallowRef(false)\n    const vDateInputRef = ref()\n\n    const display = computed(() => {\n      const value = wrapInArray(model.value)\n\n      if (!value.length) return null\n\n      if (props.multiple === true) {\n        return t('$vuetify.datePicker.itemsSelected', value.length)\n      }\n\n      if (props.multiple === 'range') {\n        const start = value[0]\n        const end = value[value.length - 1]\n\n        return adapter.isValid(start) && adapter.isValid(end)\n          ? `${adapter.format(adapter.date(start), 'keyboardDate')} - ${adapter.format(adapter.date(end), 'keyboardDate')}`\n          : ''\n      }\n\n      return adapter.isValid(model.value) ? adapter.format(adapter.date(model.value), 'keyboardDate') : ''\n    })\n\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key !== 'Enter') return\n\n      if (!menu.value || !isFocused.value) {\n        menu.value = true\n\n        return\n      }\n\n      const target = e.target as HTMLInputElement\n\n      model.value = target.value\n    }\n\n    function onClick (e: MouseEvent) {\n      e.preventDefault()\n      e.stopPropagation()\n\n      menu.value = true\n    }\n\n    function onSave () {\n      menu.value = false\n    }\n\n    function onUpdateModel (value: string) {\n      if (value != null) return\n\n      model.value = null\n    }\n\n    useRender(() => {\n      const confirmEditProps = VConfirmEdit.filterProps(props)\n      const datePickerProps = VDatePicker.filterProps(omit(props, ['active', 'location', 'rounded']))\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vDateInputRef }\n          { ...textFieldProps }\n          class={ props.class }\n          style={ props.style }\n          modelValue={ display.value }\n          onKeydown={ isInteractive.value ? onKeydown : undefined }\n          focused={ menu.value || isFocused.value }\n          onFocus={ focus }\n          onBlur={ blur }\n          onClick:control={ isInteractive.value ? onClick : undefined }\n          onClick:prepend={ isInteractive.value ? onClick : undefined }\n          onUpdate:modelValue={ onUpdateModel }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  min-width=\"0\"\n                  eager={ isFocused.value }\n                  location={ props.location }\n                  closeOnContentClick={ false }\n                  openOnClick={ false }\n                >\n                  <VConfirmEdit\n                    { ...confirmEditProps }\n                    v-model={ model.value }\n                    onSave={ onSave }\n                    onCancel={ () => menu.value = false }\n                  >\n                    {{\n                      default: ({ actions, model: proxyModel, save, cancel, isPristine }) => {\n                        return (\n                          <VDatePicker\n                            { ...datePickerProps }\n                            modelValue={ props.hideActions ? model.value : proxyModel.value }\n                            onUpdate:modelValue={ val => {\n                              if (!props.hideActions) {\n                                proxyModel.value = val\n                              } else {\n                                model.value = val\n\n                                if (!props.multiple) menu.value = false\n                              }\n                            }}\n                            onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          >\n                            {{\n                              actions: !props.hideActions ? () => slots.actions?.({ save, cancel, isPristine }) ?? actions() : undefined,\n                            }}\n                          </VDatePicker>\n                        )\n                      },\n                    }}\n                  </VConfirmEdit>\n                </VMenu>\n\n                { slots.default?.() }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({}, vDateInputRef)\n  },\n})\n\nexport type VDateInput = InstanceType<typeof VDateInput>\n"],
  "mappings": "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",
  "names": ["makeVDateInputProps", "propsFactory", "hideActions", "Boolean", "location", "type", "String", "default", "makeFocusProps", "makeVConfirmEditProps", "makeVTextFieldProps", "placeholder", "prependIcon", "omit", "makeVDatePickerProps", "hideHeader", "showAdjacentMonths", "VDateInput", "genericComponent", "name", "props", "emits", "val", "setup", "_ref", "slots", "t", "useLocale", "adapter", "useDate", "isFocused", "focus", "blur", "useFocus", "model", "useProxiedModel", "multiple", "Array", "isArray", "map", "item", "toJsDate", "date", "menu", "shallowRef", "vDateInputRef", "ref", "display", "computed", "value", "wrapInArray", "length", "start", "end", "isValid", "format", "isInteractive", "disabled", "readonly", "onKeydown", "e", "key", "target", "onClick", "preventDefault", "stopPropagation", "onSave", "onUpdateModel", "useRender", "confirmEditProps", "VConfirmEdit", "filterProps", "datePickerProps", "VDatePicker", "textFieldProps", "VTextField", "_createVNode", "_mergeProps", "class", "style", "undefined", "_Fragment", "VMenu", "$event", "onCancel", "_ref2", "actions", "proxyModel", "save", "cancel", "isPristine", "forwardRefs"]
}
